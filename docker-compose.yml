version: '2'

services:
    ### Applications Code Container #############################

    applications:
        image: tianon/true

    ### MHIRA Frontend Container ###########################

    mhira-frontend:
        build:
            context: ./mhira-frontend
        volumes_from:
            - applications
        extra_hosts:
            - 'dockerhost:${DOCKER_HOST_IP}'
        ports:
            - '${MHIRA_FRONTEND_PORT}:80'
        tty: true
        networks:
            - frontend

    ### MHIRA Backend Container ###########################

    mhira-backend:
        build:
            context: ./mhira-backend
        volumes_from:
            - applications
        extra_hosts:
            - 'dockerhost:${DOCKER_HOST_IP}'
        ports:
            - '${MHIRA_BACKEND_PORT}:3000'
        tty: true
        networks:
            - frontend
            - backend

    ### NGINX Server Container ##################################

    nginx:
        build:
            context: ./nginx
        volumes_from:
            - applications
        volumes:
            - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
            - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
        ports:
            - '${NGINX_HOST_HTTP_PORT}:80'
            - '${NGINX_HOST_HTTPS_PORT}:443'
        networks:
            - frontend
            - backend
        depends_on:
            - mhira-frontend
            - mhira-backend

    ### PostgreSQL Container ####################################

    postgres:
        build: ./postgres
        volumes:
            - ${DATA_SAVE_PATH}/postgres:/var/lib/postgresql
        ports:
            - '${POSTGRES_PORT}:5432'
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        networks:
            - backend

    ### MongoDB Container #######################################

    mongo:
        build: ./mongo
        ports:
            - '${MONGODB_PORT}:27017'
        volumes:
            - ${DATA_SAVE_PATH}/mongo:/data/db
        networks:
            - backend

    ### Redis Container #########################################

    redis:
        build: ./redis
        volumes:
            - ${DATA_SAVE_PATH}/redis:/data
        ports:
            - '${REDIS_PORT}:6379'
        networks:
            - backend

### Networks Setup ############################################

networks:
    frontend:
        driver: 'bridge'
    backend:
        driver: 'bridge'

### Volumes Setup #############################################

volumes:
    postgres:
        driver: 'local'
    redis:
        driver: 'local'
    mongo:
        driver: 'local'
    minio:
        driver: 'local'
