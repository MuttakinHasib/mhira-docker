version: "3.8"

services:
  ### MHIRA Frontend Container ###########################

  mhira-frontend:
    image: ${REGISTRY_HOST}/mhira-frontend:development
    build: ./mhira-frontend
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    ports:
      - "${MHIRA_FRONTEND_PORT}:80"
    tty: true
    networks:
      - frontend

  ### MHIRA Backend Container ###########################

  mhira-backend:
    image: ${REGISTRY_HOST}/mhira-backend:development
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    ports:
      - "${MHIRA_BACKEND_PORT}:3000"
    environment:
      - SECRET=${JWT_SECRET}
      - SERVER_PORT=3000
      - TYPEORM_CONNECTION=postgres
      - TYPEORM_HOST=${POSTGRES_HOST}
      - TYPEORM_USERNAME=${POSTGRES_USER}
      - TYPEORM_DATABASE=${POSTGRES_DB}
      - TYPEORM_PASSWORD=${POSTGRES_PASSWORD}
      - TYPEORM_PORT=${POSTGRES_PORT}
      - TYPEORM_SYNCHRONIZE=true
      - TYPEORM_LOGGING=true
      - TYPEORM_ENTITIES_DIR=/../**/*.model.{js,ts}
      - TYPEORM_MIGRATIONS_TABLE_NAME=migrations
      - TYPEORM_MIGRATIONS=migration/*.js
      - TYPEORM_MIGRATIONS_DIR=src/migrations
      - CACHE_STORE=redis
      - REDIS_HOST=redis
      - MONGODB_CONNECTION_STRING=${MONGODB_CONNECTION_STRING}
      - SUPERADMIN_USERNAME=${SUPERADMIN_USERNAME}
      - SUPERADMIN_PASSWORD=${SUPERADMIN_PASSWORD}
    tty: true
    networks:
      - frontend
      - backend
    depends_on:
      - redis
      - postgres
      - mongo

  ### NGINX Server Container ##################################

  nginx:
    build:
      context: ./nginx
    volumes:
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    networks:
      - frontend
      - backend
    depends_on:
      - mhira-frontend
      - mhira-backend

  ### PostgreSQL Container ####################################

  postgres:
    build: ./postgres
    volumes:
      - ${DATA_SAVE_PATH}/postgres:/var/lib/postgresql
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend

  ### MongoDB Container #######################################

  mongo:
    build: ./mongo
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - ${DATA_SAVE_PATH}/mongo:/data/db
    networks:
      - backend

  ### Redis Container #########################################

  redis:
    build: ./redis
    volumes:
      - ${DATA_SAVE_PATH}/redis:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend

### Networks Setup ############################################

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"

### Volumes Setup #############################################

volumes:
  postgres:
    driver: "local"
  redis:
    driver: "local"
  mongo:
    driver: "local"
